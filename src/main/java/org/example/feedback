coding was really good, towards the end u got a bit more complicated but when asked to go easy u did easy, if he could nitpick he said the isolations levels I could improve

- keep it simple
- isolation levels

system design comes next

need to design a system e2e

eg. if it's an ATM from the momento the request for money comes to the moment the cash comes out

first I'll need to perform an analysis after being given some (partial) requirements
so question their analysis, ask for more details, distil more requirements, functional and non functional requirements

you should need no hints or very minor hints, try not to get stuck and keep moving, they might suggest giving me hints
but try avoiding them

how many currencies? max amount of a transfer? etc

ask for boundary conditions and limits, think about it from a customer perspective

///

u should be able to provide propose tech stack for the problem (use it as an opportunity to show case alternatives and why
you wouldn't use some of them), don't do it based on what you've used before, but what fits the problem better

database, messaging systems are bound to pop up
components, interactions and data flow

be very mindful of time, 30 to 45 min to carry out the interview, don't care about minor details
u should be able to identify actors in the system, providers

communication should be async
take into consideration of ops, think of failure scenarios (operational and not, so for example if an ATM runs out of money)
be able to define the API, encryption, data schema

///

operational considerations, what happens when u update a config, when u restart, identify and solve common failure scenarios,
provide way to monitor and observe infra

///

scalability: system should be easily expandable to any geo location (i.e. as small business logic as possible), so translatable content coming
from a system, as minimal rework as possible


- watch out for time
- keep it simple
- reject heavy hints
